<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="882d9811-24bc-4c77-934c-b2e6d2fb6266" name="Changes" comment="# 제목은 최대 50글자까지 아래에 &quot;한국어&quot;로 작성: ex) ⛏ fix: 로그인 API auth 수정&#10;&#10;# --- COMMIT TYPE ---  &#10;#   💫 chore             : 프로젝트 초기 구성등 기타사항.&#10;#   ✨ feat              : 새로운 기능&#10;#   ⛏ fix               : 버그 수정&#10;#   💡 refactor          : 코드 리펙토링&#10;#   🎨 style             : 스타일 (코드 포맷팅, 세미콜론 등 비즈니스 로직에 영향 없는 변경 사항)&#10;#   💄 design            : CSS/UI 변경 내용&#10;#   📝 docs              : 문서 (문서 추가, 수정, 삭제)&#10;#   ✅ test              : 테스트 (테스트 코드 추가, 수정, 삭제: 비즈니스 로직에 변경 없음)&#10;#   ⚡ update            : 전반적인 수정사항&#10;#   🔥 remove             : 삭제&#10;#   🚧 in progress       : 아직 완성하지는 못했지만 진행중인 부분을 커밋해야할 경우&#10;#   🚑 HOTFIX            : 급하게 치명적인 버그를 고쳐야 하는 경우&#10;#   ➕ add dependency    : dependency 추가&#10;#   ✏ typo fix          : 오탈자 수정&#10;&#10;# -------COMMIT LOGIC-----------  &#10;# 1. (fe-develop) $ git fetch&#10;# 2. (fe-develop) $ git checkout -b fe-feature/user-login-layout --track origin/fe-develop&#10;# 3. DO commit!&#10;# 4. (fe-feature/브랜치) $ git pull --rebase origin fe-develop&#10;# 5. (fe-feature/user-login-layout) $ git push origin fe-feature/브랜치" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$/project">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <projects_view>
          <tree_state>
            <expand />
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2igZKMx3Dcjjhg4y4mvnqkKGjW9" />
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Gradle.project [:ProductClient.main()].executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "be-feature/kyungmin",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/Users/lee/CSStudy_KJK/tcpip/project/src/main/java/kyungmin"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/project/src/main/java/kyungmin" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/project/src/main" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="ProductClient" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="kyungmin.tcpip.ProductClient" />
      <module name="project.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="kyungmin.tcpip.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.ProductClient" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="882d9811-24bc-4c77-934c-b2e6d2fb6266" name="Changes" comment="" />
      <created>1719914115949</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1719914115949</updated>
    </task>
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="# 제목은 최대 50글자까지 아래에 &quot;한국어&quot;로 작성: ex) ⛏ fix: 로그인 API auth 수정&#10;&#10;# --- COMMIT TYPE ---  &#10;#    chore             : 프로젝트 초기 구성등 기타사항.&#10;#   ✨ feat              : 새로운 기능&#10;#   ⛏ fix               : 버그 수정&#10;#    refactor          : 코드 리펙토링&#10;#    style             : 스타일 (코드 포맷팅, 세미콜론 등 비즈니스 로직에 영향 없는 변경 사항)&#10;#    design            : CSS/UI 변경 내용&#10;#    docs              : 문서 (문서 추가, 수정, 삭제)&#10;#   ✅ test              : 테스트 (테스트 코드 추가, 수정, 삭제: 비즈니스 로직에 변경 없음)&#10;#   ⚡ update            : 전반적인 수정사항&#10;#    remove             : 삭제&#10;#    in progress       : 아직 완성하지는 못했지만 진행중인 부분을 커밋해야할 경우&#10;#    HOTFIX            : 급하게 치명적인 버그를 고쳐야 하는 경우&#10;#   ➕ add dependency    : dependency 추가&#10;#   ✏ typo fix          : 오탈자 수정&#10;&#10;# -------COMMIT LOGIC-----------  &#10;# 1. (fe-develop) $ git fetch&#10;# 2. (fe-develop) $ git checkout -b fe-feature/user-login-layout --track origin/fe-develop&#10;# 3. DO commit!&#10;# 4. (fe-feature/브랜치) $ git pull --rebase origin fe-develop&#10;# 5. (fe-feature/user-login-layout) $ git push origin fe-feature/브랜치" />
    <option name="LAST_COMMIT_MESSAGE" value="# 제목은 최대 50글자까지 아래에 &quot;한국어&quot;로 작성: ex) ⛏ fix: 로그인 API auth 수정&#10;&#10;# --- COMMIT TYPE ---  &#10;#    chore             : 프로젝트 초기 구성등 기타사항.&#10;#   ✨ feat              : 새로운 기능&#10;#   ⛏ fix               : 버그 수정&#10;#    refactor          : 코드 리펙토링&#10;#    style             : 스타일 (코드 포맷팅, 세미콜론 등 비즈니스 로직에 영향 없는 변경 사항)&#10;#    design            : CSS/UI 변경 내용&#10;#    docs              : 문서 (문서 추가, 수정, 삭제)&#10;#   ✅ test              : 테스트 (테스트 코드 추가, 수정, 삭제: 비즈니스 로직에 변경 없음)&#10;#   ⚡ update            : 전반적인 수정사항&#10;#    remove             : 삭제&#10;#    in progress       : 아직 완성하지는 못했지만 진행중인 부분을 커밋해야할 경우&#10;#    HOTFIX            : 급하게 치명적인 버그를 고쳐야 하는 경우&#10;#   ➕ add dependency    : dependency 추가&#10;#   ✏ typo fix          : 오탈자 수정&#10;&#10;# -------COMMIT LOGIC-----------  &#10;# 1. (fe-develop) $ git fetch&#10;# 2. (fe-develop) $ git checkout -b fe-feature/user-login-layout --track origin/fe-develop&#10;# 3. DO commit!&#10;# 4. (fe-feature/브랜치) $ git pull --rebase origin fe-develop&#10;# 5. (fe-feature/user-login-layout) $ git push origin fe-feature/브랜치" />
  </component>
</project>